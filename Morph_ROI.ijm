{"payload":{"allShortcutsEnabled":true,"fileTree":{"FRAP_Measure":{"items":[{"name":"Create_Object_Collection.ijm","path":"FRAP_Measure/Create_Object_Collection.ijm","contentType":"file"},{"name":"FRAP_measure.ijm","path":"FRAP_Measure/FRAP_measure.ijm","contentType":"file"},{"name":"Morph_ROI.ijm","path":"FRAP_Measure/Morph_ROI.ijm","contentType":"file"},{"name":"README.md","path":"FRAP_Measure/README.md","contentType":"file"}],"totalCount":4},"":{"items":[{"name":"Align_Channels","path":"Align_Channels","contentType":"directory"},{"name":"Beads_FWHM","path":"Beads_FWHM","contentType":"directory"},{"name":"BitsAndBobs","path":"BitsAndBobs","contentType":"directory"},{"name":"Bleaching_Steps","path":"Bleaching_Steps","contentType":"directory"},{"name":"Camera_Calibration","path":"Camera_Calibration","contentType":"directory"},{"name":"Cell_Organization","path":"Cell_Organization","contentType":"directory"},{"name":"Cellpose","path":"Cellpose","contentType":"directory"},{"name":"Cluster_Job","path":"Cluster_Job","contentType":"directory"},{"name":"Colocalization_Analysis","path":"Colocalization_Analysis","contentType":"directory"},{"name":"Contour_Curvature","path":"Contour_Curvature","contentType":"directory"},{"name":"Count_Blobs_In_ROI","path":"Count_Blobs_In_ROI","contentType":"directory"},{"name":"Debluring","path":"Debluring","contentType":"directory"},{"name":"Detect_Spots","path":"Detect_Spots","contentType":"directory"},{"name":"Digital_Phase_Contrast","path":"Digital_Phase_Contrast","contentType":"directory"},{"name":"FRAP_Measure","path":"FRAP_Measure","contentType":"directory"},{"name":"FRC","path":"FRC","contentType":"directory"},{"name":"File_Conversion","path":"File_Conversion","contentType":"directory"},{"name":"GMM","path":"GMM","contentType":"directory"},{"name":"GUV_Intensity","path":"GUV_Intensity","contentType":"directory"},{"name":"Intensity_Profiles","path":"Intensity_Profiles","contentType":"directory"},{"name":"Line_Morphing","path":"Line_Morphing","contentType":"directory"},{"name":"Make_Figure","path":"Make_Figure","contentType":"directory"},{"name":"Pre Post synatic marker analysis","path":"Pre Post synatic marker analysis","contentType":"directory"},{"name":"Register_frames","path":"Register_frames","contentType":"directory"},{"name":"Shape_RAG_Rank","path":"Shape_RAG_Rank","contentType":"directory"},{"name":"T_Test","path":"T_Test","contentType":"directory"},{"name":"Template_Matching","path":"Template_Matching","contentType":"directory"},{"name":"Tetrahymena_Beat","path":"Tetrahymena_Beat","contentType":"directory"},{"name":"Tiles_Tools","path":"Tiles_Tools","contentType":"directory"},{"name":"Volumic_Intensity_Analysis","path":"Volumic_Intensity_Analysis","contentType":"directory"},{"name":".gitattributes","path":".gitattributes","contentType":"file"},{"name":".gitignore","path":".gitignore","contentType":"file"},{"name":"LICENSE","path":"LICENSE","contentType":"file"},{"name":"README.md","path":"README.md","contentType":"file"}],"totalCount":34}},"fileTreeProcessingTime":6.663214,"foldersToFetch":[],"reducedMotionEnabled":"system","repo":{"id":366682129,"defaultBranch":"main","name":"imagej-macro","ownerLogin":"jboulanger","currentUserCanPush":false,"isFork":false,"isEmpty":false,"createdAt":"2021-05-12T11:47:24.000+01:00","ownerAvatar":"https://avatars.githubusercontent.com/u/3415561?v=4","public":true,"private":false,"isOrgOwned":false},"symbolsExpanded":false,"treeExpanded":true,"refInfo":{"name":"main","listCacheKey":"v0:1620816448.483097","canEdit":true,"refType":"branch","currentOid":"cc339efa8fde38c7ae0260836184d211fa754009"},"path":"FRAP_Measure/Morph_ROI.ijm","currentUser":{"id":131262458,"login":"ymodis","userEmail":"ymodis@mrc-lmb.cam.ac.uk"},"blob":{"rawLines":["#@String(label=\"Channel names\", description=\"list the name of the channels in the channel order, separated by comas\", value=\"caspase,bodipy\") channel_names_csv","#@String(label=\"ROI names\", description=\"list the name of the ROI, separated by comas, the order will define the ROI group index\", value=\"cell,foci\") roi_names_csv","#@String(label=\"ROI colors\", description=\"list the colors for the ROI, separated by comas\", value=\"red,green\") roi_colors_csv","#@String(label=\"Measurment\", choices={\"RawIntDen\",\"Mean\",\"Area\"}, style=\"list\") measurement","","/*"," * ROI Morphing and intensity measurment"," * "," * From a set of ROI with name defining their groups interpolate over time the ROI"," * and measure the sum of the intensity over time."," * "," * Jerome Boulanger 2022 for Yangci"," */","","start_time = getTime();","print(\"\\\\Clear\");","","","if (nImages==0) {","\tcreateTest();","\ttestmode = true;","} else {","\ttestmode=false;","}","","channel_names = parseCSVString(channel_names_csv);","roi_names = parseCSVString(roi_names_csv);","roi_colors = parseCSVString(roi_colors_csv);","","tbl = File.getNameWithoutExtension(getTitle())+'.csv';","initTable(tbl, roi_names, channel_names);","","Overlay.remove();","id = getImageID();","","preprocessROIs(roi_names, roi_colors);","","bloombloom(tbl, roi_names, channel_names, measurement);","","addOverlays();","","if (testmode) {","\tcreateMontage();","}","","end_time = getTime();","print(\"Elapsed time \" + (end_time - start_time)/1000 + \"s\");","","function createMontage() {","\tStack.getDimensions(width, height, channels, slices, frames);","\tsetColor(\"black\");","\tsetFont(\"Arial\",40);","\tfor (i = 1; i <= frames; i++) {\t\t","\t\tOverlay.drawString(\"t=\"+i, 2, 40);","\t\tOverlay.setPosition(0, 0, i);","\t\tOverlay.add();","\t}","\tStack.setDisplayMode(\"composite\");","\trun(\"RGB Color\", \"frames keep\");","\twait(100);","\tid1=getImageID();","\trun(\"Flatten\", \"stack\");","\tn = Math.ceil(sqrt(frames));","\trun(\"Make Montage...\", \"columns=\"+n+\" rows=\"+n+\" scale=1\");","\twait(100);","\tid3=getImageID();","\tselectImage(id1); close();\t","\tselectImage(id3); ","}","","function bloombloom(tbl, roi_names, channel_names, measurement) {\t","\t// morph roi and measure over time","\tfor (i = 0; i < roi_names.length; i++) {","\t\trois0 = getROIGroup(roi_names[i]);","\t\trois1 = addIntermediateROIsForGroup(rois0);\t","\t\tmeasure(tbl, rois1, roi_names[i], channel_names,measurement);","\t}","}","","function addOverlays() {","\t// add overlays","\tn = roiManager(\"count\");","\tfor (i = 0; i < n; i++) {","\t\troiManager(\"select\", i);","\t\tRoi.getPosition(channel, slice, frame);\t\t","\t\tOverlay.addSelection();\t","\t\tOverlay.setPosition(0, 0, frame);","\t\tOverlay.show();","\t}","}","","function getROINameList() {","\t// get the names of the ROI","\tn = roiManager(\"count\");","\troiManager(\"select\", 0);","\tnames = newArray(Roi.getName);\t","\tk = 1;","\tfor (i = 1; i < n; i++) {","\t\troiManager(\"select\", i);","\t\tname = Roi.getName;","\t\tfor (j = 0; j < names.length; j++) {","\t\t\tif (!matches(name, names[j])) {\t\t\t","\t\t\t\tnames[k] = name;","\t\t\t\tk++;","\t\t\t\tbreak;","\t\t\t}","\t\t}\t\t","\t}","\treturn Array.trim(names, k);","}","","function measure(tbl, rois, roi_name, channel_names, measurement) {","\t// measure the sum of the intensity in each ROI/channel for each time point\t\t","\tfor (i = 0; i < rois.length; i++) {\t\t\t\t\t\t","\t\tid = rois[i];","\t\tframe = getROIFrame(id);","\t\tfor (j = 0; j < channel_names.length; j++) {\t\t\t","\t\t\troiManager(\"select\", id);\t","\t\t\tStack.setChannel(j+1);\t","\t\t\tvalue = getValue(measurement);","\t\t\tTable.set(roi_name+\"-\"+channel_names[j], frame-1, value);","\t\t}","\t}","\tTable.update();","}","","function initTable(tbl, roi_names, channel_names) {","\t// init a table a fill it with -1;\t","\tTable.create(tbl);\t","\tn = roiManager(\"count\");","\tframes = 0;","\tfor (i = 0; i < n; i++) {\t\t","\t\tframe = getROIFrame(i);","\t\tif (frame > frames) {","\t\t\tframes = frame;","\t\t}","\t}\t","\ttunits = getTimeUnits();","\tfor (frame = 1; frame <= frames; frame++) {","\t\tTable.set(\"Frame\", frame-1, frame);","\t\tTable.set(tunits[2], frame-1, (frame-1) * tunits[0]);","\t\tfor (i = 0; i < roi_names.length; i++) {","\t\t\tfor (j = 0; j < channel_names.length; j++) {","\t\t\t\tTable.set(roi_names[i]+\"-\"+channel_names[j], frame-1, NaN);","\t\t\t}","\t\t}\t\t","\t}","}","","function getTimeUnits() {","\t// return an array with [ FrameInterval,Unit,\"Time [\"+Unit\"]\" ]","\tdt = Stack.getFrameInterval();","\tif (dt==0) {","\t\tdt = 1;","\t\tTime = \"Frame\";","\t} else {","\t\tStack.getUnits(X, Y, Z, Time, Value);","\t}","\treturn newArray(dt, Time, \"Time [\"+Time+\"]\");","}","","function addIntermediateROIsForGroup(rois) {","\t// add intermediate ROIs for a given group defined by a ordered list of ","\t// roi indices.","\tnrois = rois;","\tfor (i = 0; i < rois.length-1; i++) {","\t\tids = addIntermediateROIs(rois[i], rois[i+1]);\t\t\t\t","\t\tnrois = Array.concat(nrois, ids);\t\t","\t}","\tnrois = orderROIIndicesByFrame(nrois);","\treturn nrois;","}","","function addIntermediateROIs(id1, id2) {","\t// add all missing rois between id1 and id2 based on their frame position","\tt1 = getROIFrame(id1);","\tname = Roi.getName;","\tcolor = Roi.getStrokeColor;","\tp1 = getROICoordinates(id1);\t","\tt2 = getROIFrame(id2);","\tp2 = getROICoordinates(id2);","\tif (t2 - t1 < 1) {return newArray();}","\tD = pairwiseDistance(p1, p2);","\tP = sinkhorn_uniform(D,100);\t","\tthreshold = 0.5 * matmax(P,-1);","\tprint(\"Interpolation of roi:\" +id1+\"[t:\"+t1+\"] and roi:\"+id2+\" [t:\"+t2+\"]\");","\trois = newArray(t2-t1-1);","\tfor (k = 0; k < rois.length; k++) {","\t\tp = interpolateROICoordinates(P,p1,p2,t1,t2,t1+k+1,threshold);","\t\trois[k] = addROIfromCoordinates(p,t1+k+1,name,color);\t\t","\t}","\treturn rois;","}","","function addROIfromCoordinates(p,t,name,color) {","\t// add a oi to the roi manager from the coordinates","\tn = matcol(p);","\tx = newArray(n);","\ty = newArray(n);","\tfor (i = 0; i < n; i++) {","\t\tx[i] = matget(p,0,i);","\t\ty[i] = matget(p,1,i);","\t}\t","\tmakeSelection(3, x, y);\t\t","\trun(\"Fit Spline\");","\trun(\"Interpolate\", \"interval=1 smooth\");","\tRoi.setName(name);\t","\tRoi.setStrokeColor(color);","\tRoi.setPosition(0, 0, t);","\troiManager(\"add\");","\tid = roiManager(\"count\")-1;","\treturn id;","}","","function interpolateROICoordinates(P,p0,p1,t0,t1,t,threshold) {","\t// interpolate ROI coordinates between two time points t0 and t1 at time t","\tn = matcol(p0);","\tm = matcol(p1);","\tp = matzeros(2,n*m);","\tdt = (t-t0) / (t1-t0-1);","\t// this make the deformation more progressive at the begining and the end","\ts = 3 * dt * dt - 2 * dt * dt * dt;\t\t","\tk = 0;","\tfor (i = 0; i < n; i++) {","\t\tfor (j = 0; j < m; j++) {\t\t\t","\t\t\tif (matget(P,i,j) > threshold) {","\t\t\t\tmatset(p,0,k,(1-s) * matget(p0,0,i) + s * matget(p1,0,j));","\t\t\t\tmatset(p,1,k,(1-s) * matget(p0,1,i) + s * matget(p1,1,j));\t\t\t","\t\t\t\tk = k + 1;","\t\t\t}","\t\t}","\t}","\t// crops the coordinate columns to [0-k]","\tpfinal = matzeros(2,k-1);","\tfor (i = 0; i < k-1; i++) {","\t\tmatset(pfinal,0,i,matget(p,0,i));","\t\tmatset(pfinal,1,i,matget(p,1,i));","\t}","\treturn pfinal;","}","","","function orderROIIndicesByFrame(rois) {","\t// order the ROIs indices in rois by their frame number","\ttime = newArray(rois.length);","\tfor (i = 0; i < rois.length; i++) {","\t\troiManager(\"select\", rois[i]);","\t\twait(10);","\t\tRoi.getPosition(channel, slice, frame);","\t\ttime[i] = frame;\t\t","\t}\t\t","\tranks = Array.rankPositions(time);","\tordered_rois = newArray(rois.length);","\tfor (i = 0; i < rois.length; i++) {","\t\tordered_rois[i] = rois[ranks[i]];","\t}\t","\treturn ordered_rois;","}","","function getROIFrame(i) {","\t// Frame position of the ROI at index id","\troiManager(\"select\", i);","\tRoi.getPosition(channel, slice, frame);\t","\treturn frame;","}","","function getROIGroup(name) {","\t// list the roi from one group using their name and sort them by frame index","\tn = roiManager(\"count\");","\trois = newArray(n);","\ttime = newArray(n);","\tk = 0;\t","\tfor (i = 0; i < n; i++) {","\t\troiManager(\"select\", i);\t\t","\t\tif (matches(Roi.getName(), name)) {","\t\t\tRoi.getPosition(channel, slice, frame);","\t\t\trois[k] = i;","\t\t\ttime[k] = frame;","\t\t\tk++;","\t\t}","\t}","\trois = Array.trim(rois, k);","\ttime = Array.trim(time, k);","\tranks = Array.rankPositions(time);","\tordered_rois = newArray(rois.length);","\tfor (i = 0; i < rois.length; i++) {","\t\tordered_rois[i] = rois[ranks[i]];","\t}","\treturn ordered_rois;","}","","function preprocessROIs(names,colors) {","\t// assign groups to the ROI and interpolate the individual contours","\tfor (i = 0; i < names.length; i++) {","\t\tnames[i] = toLowerCase(names[i]);","\t}\t","\t// lowercase name, assign groups, colors and interpolate","\tn = roiManager(\"count\");","\tfor (i = 0; i < n; i++) {","\t\troiManager(\"select\", i);","\t\troiManager(\"rename\", String.trim(toLowerCase(Roi.getName())));","\t\tfor (k = 0; k < names.length; k++) {","\t\t\tif (matches(Roi.getName(), names[k])) {","\t\t\t\tRoiManager.setGroup(k+1);","\t\t\t\tRoi.setStrokeColor(colors[k]);","\t\t\t\troiManager(\"update\");","\t\t\t\tbreak;","\t\t\t}","\t\t}","\t\tgetPixelSize(unit, px, px);","\t\tds = maxOf(2, getValue(\"Perim.\") / px / 50);\t\t","\t\tprint(ds);","\t\trun(\"Interpolate\", \"interval=\"+ds+\" smooth\");","\t\trun(\"Fit Spline\");","\t\trun(\"Interpolate\", \"interval=\"+ds+\" smooth\");","\t\troiManager(\"update\");","\t}","}","","function createTest() {","\tprint(\"Generating a test image\");","\trun(\"Roi Defaults...\", \"color=green stroke=1 group=1 name=cell\");","\trun(\"Roi Defaults...\", \"color=red stroke=1 group=2 name=foci\");","\tif (isOpen(\"ROI Manager\")) {selectWindow(\"ROI Manager\");run(\"Close\");}","\twidth = 400;","\theight = 400;","\tchannels = 3;","\tframes = 16;","\tnewImage(\"Test Image\", \"8-bit white\", width, height, channels, 1, 2);","\tStack.setDisplayMode(\"composite\");","\tStack.setPosition(1, 1, 1);","\tmakeRectangle(width/4, height/4, width/2, height/2);","\tsetColor(255);","\trun(\"Fill\", \"slice\");","\tStack.setPosition(1, 1, 2);","\tmakeOval(width/4, height/4, width/2, height/2);","\tsetColor(128);","\trun(\"Fill\", \"slice\");","\tStack.setPosition(2, 1, 1);","\tmakeOval(0.6*width, 0.6*height, 0.1*width, 0.1*width);","\tsetColor(255);","\trun(\"Fill\", \"slice\");","\tStack.setPosition(2, 1, 2);","\tmakeOval(0.8*getWidth, 0.8*getHeight, 0.12*getWidth, 0.12*getWidth);\t","\tsetColor(255);","\t","\trun(\"Fill\", \"slice\");","\trun(\"Select None\");\t","\trun(\"Size...\", \"width=\"+width+\" height=\"+height+\" time=\"+frames+\" average interpolation=Bilinear\");","\t","\t// define cells at 3 time points","\tStack.setFrame(1);","\tmakeRectangle(width/4, height/4, width/2, height/2);\t","\trun(\"Interpolate\", \"interval=2 smooth\");","\tRoi.setGroup(1);","\tRoi.setName(\"cell\");","\tRoi.setPosition(1, 1, 1);","\troiManager(\"add\");","\t\t","\tStack.setFrame(frames);","\tmakeOval(width/4, height/4, width/2, height/2);","\trun(\"Interpolate\", \"interval=2 smooth\");\t","\tRoi.setGroup(1);","\tRoi.setName(\"cell\");","\tRoi.setPosition(1, 1, frames);","\troiManager(\"add\");\t","\t","\tStack.setFrame(round(frames/2));\t","\t// draw a star","\txpts = newArray(10);","\typts = newArray(10);","\tfor (k = 0; k < 10; k++) {","\t\txpts[k] = getWidth*(0.5+(0.4*(k%2==0)+0.2*((k+1)%2==0))*cos(2*PI*k/10));","\t\typts[k] = getHeight*(0.5+(0.4*(k%2==0)+0.2*((k+1)%2==0))*sin(2*PI*k/10));","\t}","\tmakeSelection(\"polygon\",xpts,ypts);","\trun(\"Interpolate\", \"interval=2 smooth\");","\tRoi.setGroup(1);","\tRoi.setName(\"cell\");","\tRoi.setPosition(1, 1, round(frames/2));","\troiManager(\"add\");","\t\t","\t// define foci at 2 time points","\tStack.setFrame(1);","\tmakeOval(0.4*width, 0.4*height, 0.1*width, 0.1*width);\t","\tRoi.setGroup(2);","\tRoi.setName(\"foci\");","\tRoi.setPosition(2, 1, 1);","\troiManager(\"add\");","\t","\tStack.setFrame(frames);\t\t","\tmakeOval(0.6*getWidth, 0.6*getHeight, 0.12*getWidth, 0.12*getWidth);\t","\tRoi.setGroup(2);","\tRoi.setName(\"foci\");","\tRoi.setPosition(2, 1, frames);","\troiManager(\"add\");\t","\tchannel_names_csv = \"caspase,bodipy\";","\troi_names_csv = \"cell,foci\";","}","","function parseCSVString(csv) {","\t// split a csv string and trim each element","\tstr = split(csv, \",\");","\tfor (i = 0; i < str.length; i++) { ","\t\tstr[i] =  String.trim(str[i]);","\t}","\treturn str;","}","","","function diff(u) {","\t// centered finite difference with symmetric bc","\tn = u.length;","\td = newArray(n);\t","\td[0] = u[1] - u[0];\t","\tfor (i = 1; i < n - 1; i++) {","\t\td[i] = (u[i+1] - u[i-1]) / 2.0;","\t}","\td[n-1] = u[n-1] - u[n-2];","\treturn d; ","}","","","function sinkhorn_uniform(C,gamma) {","\t// Optimal transport using uniform weights","\tn = matrow(C);","\tm = matcol(C);","\tp = matones(n,1);","\tq = matones(m,1);","\tP = sinkhorn(C,p,q,gamma);","\treturn P;","}","","function sinkhorn(C,p,q,gamma) {","\t/* Optimal transport ","\t *  Parameters","\t * X: cost [n,m] matrix (distance)","\t * p : mass [m,1] vector (probability)","\t * q : mass [m,1] vector (probability)","\t * gamma : entropic regularization parameter","\t * Note","\t * - p and q will be normalized by their sum and reshaped as column vector","\t * - if gamma < 0, gamma is set to 10/min(C) ","\t * ","\t */","\tn = matrow(C);","\tm = matcol(C);","\tassert((matsize(p) == n), \"Size of C [\"+n+\"x\"+m+\"] and p [\"+matsize(p)+\"] do not match\");","\tassert((matsize(q) == m), \"Size of C [\"+n+\"x\"+m+\"] and p [\"+matsize(q)+\"] do not match\");","\tp = matreshape(p,n,1);","\tq = matreshape(q,m,1);","\t// normalize p and q","\tp = mat_normalize_sum(p);","\tq = mat_normalize_sum(q);","\t","\t// compute a default gamma value from C","\tif (gamma < 0) {","\t\tminc = C[2];","\t\tfor (i = 3; i < C.length; i++) {minc = minOf(minc, C[i]);}\t\t","\t\tgamma = 10*minc;","\t\tprint(\"min c: \"+minc+\" gamma = \"+gamma);","\t}","\t// compute xi = exp(-C/gamma)","\txi = matzeros(n,m);\t","\tfor (i = 0; i < n; i++) {","\t\tfor (j = 0; j < m; j++) {","\t\t\tcij = matget(C,i,j);","\t\t\tval = exp(-cij/gamma);","\t\t\tmatset(xi,i,j,val);","\t\t}","\t}","\t// iterativerly evaluate","\t// a = p ./ (xi*b)","\t// b = q ./ (x'*a)","\txit = mattranspose(xi);","\tb = matones(m,1);","\tfor (iter = 0; iter < 30; iter++) {","\t\txib = matmul(xi,b);","\t\ta = mat_div(p,xib);","\t\txita = matmul(xit,a);","\t\tb = mat_div(q,xita);","\t}","\t// P = diag(a)*xi*diag(b)","\ta = matdiag(a);","\tb = matdiag(b);","\tP = matmul(xi, b);","\tP = matmul(a, P);","\t","\treturn P;","}","","function mat_normalize_sum(A) {","\t// normalize A by the sum over all indices","\tB = A;","\ts = 0;","\tfor (i = 2; i < A.length; i++) {","\t\t s += A[i];","\t}","\tfor (i = 2; i < A.length; i++) {","\t\t B[i] = A[i] / s;","\t}","\treturn B;","}","","function assert(cond, msg) {","\t// check that condition is true","\tif (!(cond)) {","\t\texit(msg);","\t}","}","","function pairwiseDistance(p,q) {","\t// Compute the pairwie distance between p and q","\t// P : 2xn coordinate matrix","\t// Q : 2xm coordinate matrix","\t// return distance [n x m] matrix","\tn = matcol(p);","\tm = matcol(q);","\tD = matrow(p);","\ta = matzeros(n,m);","\tfor (i = 0; i < n; i++) {","\t\tfor (j = 0; j < m; j++) {","\t\t\ts = 0;","\t\t\tfor (k = 0; k < D; k++) {","\t\t\t\td = matget(p,k,i) - matget(q,k,j);","\t\t\t\ts += d*d;","\t\t\t}","\t\t\tmatset(a,i,j,s);","\t\t}","\t}","\treturn a;","}","","","function getROICoordinates(roi_id) {","\t// get the spline anchor of the ROI","\t// return a 2xn matrixs","\troiManager(\"select\",roi_id);\t","\tRoi.getSplineAnchors(x, y);","\tn = x.length;","\tvals = Array.concat(x,y);","\tm = matnew(2,n,vals);","\treturn m;","}","","","/////////////////////////////////////////////////////////","// Basic Linear Algebra","////////////////////////////////////////////////////////","function matnew(n,m,vals) {","\t// Initialize a matrix with values","\t// Column major, N rows and M columns","\t// Matrices are array with 2 first elements being the dimensions","\tA = newArray(2+n*m);","\tA[0] = n;","\tA[1] = m;","\tfor (i = 0; i < vals.length; i++) {","\t\tA[2+i] = vals[i];","\t}","\treturn A;","}","","function matrow(A) {","\t// return the number of rows","\treturn A[0];","}","","function matcol(A) {","\t// return the number of columns","\treturn A[1];","}","","function matsize(A) {","\t// return the number of elements of A","\treturn A.length - 2;","}","","function matzeros(n,m) {","\t// Return an NxM matrix initialized with zeros","\tA = newArray(2+n*m);","\tA[0] = n;","\tA[1] = m;","\treturn A;","}","","function matones(n,m) {","\t// Return an NxM matrix initialized with zeros","\tA = matzeros(n,m);","\tfor (i = 2 ; i < A.length; i++) {","\t\tA[i] = 1;","\t}","\treturn A;","}","","function matreshape(A,n,m) {","\t// Reshape the matrix","\tB = A;","\tB[0] = n;","\tB[1] = m;","\treturn B;","}","","function matdiag(v) {","\t// create a diagonal matrix with the values of the vector v","\tn = v.length - 2;","\tA  = matzeros(n,n);","\tfor (i = 0 ; i < n; i++) {","\t\tmatset(A,i,i,matget(v,i,0));","\t}","\treturn A;","}","","function matset(A,i,j,val) {","\t// set value of A[i,j] in place","\tif (i >= 0 && i < A[0] && j >=0 && j < A[1]) {","\t\tA[2+j+A[1]*i] = val;","\t} else {","\t\tprint(\"Error in matset: out of bound [\" + i + \",\"+j+\"] in A[\"+A[0]+\",\"+A[1]+\"]\");","\t\tplease_check_the_message_in_the_log();","\t}","}","","function matget(A,i,j) {","\t// get the value A[i,j]","\tif (i >= 0 && i < A[0] && j >=0 && j < A[1]) {","\t\treturn A[2+j+A[1]*i];","\t} else {","\t\tprint(\"Error in matset: out of bound [\" + i + \",\"+j+\"] in A[\"+A[0]+\",\"+A[1]+\"]\");","\t\tplease_check_the_message_in_the_log();","\t}","}","","function mattranspose(A) {","\t// transpose matrix A","\tM = matcol(A);","\tN = matrow(A);","\tB = matzeros(M,N);","\tfor (n=0;n<N;n++) {","\t\tfor (m=0;m<M;m++) {","\t\t\tB[2+n+m*N] = A[2+m+n*M];","\t\t}","\t}","\treturn B;","}","","function mat2str(A,name) {","\t// Convert the matrix to a string","\tif (A.length == 0){","\t\tstr = name + \"is an empty matrix\";","\t} else {","\t\tN = A[0];","\t\tM = A[1];","\t\tstr = name + \" [\"+N+\"x\"+M+\"] :\\n\";","\t\tfor (n=0;n<N;n++) {","\t\t\tfor (m=0;m<M;m++) {","\t\t\t\tstr = str + A[2+m+n*M];","\t\t\t\tif ( m == M-1 ){ str = str + \"\\n\";}","\t\t\t\telse  {str = str + \", \";}","\t\t\t}","\t\t}","\t}","\treturn str;","}","","function mat2img(A,name) {","\t// create an image and fill it with the matrix values","\twidth = matcol(A);","\theight = matrow(A);","\tnewImage(name, \"32-bit\", width, height, 1);","\tid = getImageID();","\tfor (y = 0; y < height; y++) {","\t\tfor (x = 0; x < width; x++) {","\t\t\tsetPixel(x, y, matget(A,y,x));","\t\t}","\t}","\trun(\"Enhance Contrast\", \"saturated=0.0\");","\trun(\"In [+]\");","\trun(\"In [+]\");","\treturn id;","}","","function matadd(A,B,alpha) {","\t// Add 2 matrices A and B (A + alpha B)","\tC = matzeros(A[0],A[1]);","\tfor (i = 2; i <A.length; i++){C[i] = A[i]+alpha*B[i];}","\treturn C;","}","","function matrep(A,K,L) {","\t// repeat matrix A","\tN = A[0];","\tM = A[1];","\tB = matzeros(N*K,L*M);","\tfor (k = 0; k < K; k++) {","\t\tfor (l = 0; l < L; l++) {\t","\t\t\tfor (n = 0; n < N; n++) {","\t\t\t\tfor (m = 0; m < M; m++) {","\t\t\t\t\tB[2+m+l*M+(M*L)*(n+k*N)] = A[2+m+n*M];","\t\t\t\t}","\t\t\t}","\t\t}","\t}","\treturn B;","}","","function matmul(A,B) {","\t// matrix multiplication C[nxk] = A[nxm] x B[mxk] ","\t// C[n,k] = sum A[n,m] B[m,k]","\t// (column major matrices)","\tN = A[0];","\tM = A[1];","\tK = B[1];","\tif (B[0] != A[1]) {","\t\tprint(\"matmul(A,B): incompatible dimensions A [\"+ A[0]+\"x\"+A[1]+\"], B [\"+B[0]+\"x\"+B[1]+\"].\");","\t\tplease_check_the_message_in_the_log();","\t\t","\t}","\tC = matzeros(N,K);","\tfor (n = 0; n < N; n++) {","\t\tfor (k = 0; k < K; k++) {","\t\t\tfor (m = 0; m < M; m++) {","\t\t\t\tC[2+k+n*K] = C[2+k+n*K] + A[2+m+n*M] * B[2+k+m*K];","\t\t\t}","\t\t}","\t}","\treturn C;","}","","function mat_mul(A,B) {","\t// multiply entry wise the two matrices","\t// C[i,j] = A[i,j] * B[i,j]","\tassert((A.length == B.length), \"A and B have incompatible size\");","\tN = A[0];","\tM = A[1];","\tC = matzeros(N,M)","\tfor (i = 2; i < C.length; i++) {","\t\tC[i] = A[i] * B[i];","\t}","\treturn C;","}","","function mat_div(A,B) {","\t// divide entry wise A by B","\t// C[i,j] = A[i,j] / B[i,j]","\tassert((A.length == B.length), \"A and B have incompatible size\");","\tN = A[0];","\tM = A[1];","\tC = matzeros(N,M);","\tfor (i = 2; i < C.length; i++) {","\t\tC[i] = A[i] / B[i];","\t}","\treturn C;","}","","","function matsum(A,dim) {","\t// sum values of A algon 1 dimension (0 or 1), if dim==-1, sum over all values","\tN = A[0];","\tM = A[1];","\tif(dim==0) {","\t\tS = matzeros(1,M);","\t\tfor (n = 0; n < N; n++) {","\t\t\tfor (m = 0; m < M; m++) {","\t\t\t\tS[2+m] = S[2+m] + A[2+m+n*M];","\t\t\t}","\t\t}","\t} else if (dim==1){","\t\tS = matzeros(N,1);","\t\tfor (n = 0; n < N; n++) {","\t\t\tfor (m = 0; m < M; m++) {","\t\t\t\tS[2+n] = S[2+n] + A[2+m+n*M];","\t\t\t}","\t\t}","\t} else {","\t\tS = 0;","\t\tfor (n = 0; n < N; n++) {","\t\t\tfor (m = 0; m < M; m++) {","\t\t\t\tS = S + A[2+m+n*M];\t","\t\t\t}","\t\t}","\t}","\treturn S;","}","","function matmean(A,dim) {","\t// average along dimension if dim==0 or 1","\tB = matsum(A,dim);","\tif (dim == 0 || dim==1) {","\t\tfor (i = 2; i < B.length; i++) {","\t\t\tB[i] = B[i] / A[dim];","\t\t}","\t} else {","\t\tB = B / (A[0]*A[1]);","\t}","\treturn B;","}","","function matmax(A,dim) {","\t// average along one dimension","\tN = A[0];","\tM = A[1];","\tif(dim==0) {","\t\tS = matzeros(1,M);","\t\tfor (n = 0; n < N; n++) {","\t\t\tfor (m = 0; m < M; m++) {","\t\t\t\tS[2+m] = maxOf(S[2+m],A[2+m+n*M]);","\t\t\t}","\t\t}","\t} else if (dim==1){","\t\tS = matzeros(N,1);","\t\tfor (n = 0; n < N; n++) {","\t\t\tfor (m = 0; m < M; m++) {","\t\t\t\tS[2+n] = maxOf(S[2+n],A[2+m+n*M]);","\t\t\t}","\t\t}","\t} else {","\t\tS = A[2];","\t\tfor (n = 0; n < N; n++) {","\t\t\tfor (m = 0; m < M; m++) {","\t\t\t\tS = maxOf(S,A[2+m+n*M]);\t","\t\t\t}","\t\t}","\t}","\treturn S;","}","","function solve(A,B) {","\t// Solve A*X=B by iterating X=X-At(AX - B)","\t// A[NxM] x X[MxK] = B [NxK]","\tprint(mat2str(A,\"A\"));","\tprint(mat2str(B,\"B\"));","\tN = A[0];","\tM = A[1];","\tK = B[1];","\tAt = mattranspose(A);","\tAtA = matmul(At,A);","\tAtB = matmul(At,B);","\tX = matzeros(M,K);","\ta = matnorm(AtA);","\tfor (iter = 0; iter < 1000; iter++) {","\t\tAtAX = matmul(AtA,X);","\t\tdX = matadd(AtAX,AtB,-1);","\t\tX = matadd(X, dX, -1/(2*a));","\t}","\treturn X;","}","","function matnorm(A) {","\t// L2 norm of the matrix (sum a_ij^2)","\tn = 0;","\tfor (i = 2; i < A.length; i++) {","\t\tn = n + A[i]*A[i];","\t}","\treturn sqrt(n);","}"],"stylingDirectivescsv":null,"csvError":null,"dependabotInfo":{"showConfigurationBanner":false,"configFilePath":null,"networkDependabotPath":"/jboulanger/imagej-macro/network/updates","dismissConfigurationNoticePath":"/settings/dismiss-notice/dependabot_configuration_notice","configurationNoticeDismissed":false,"repoAlertsPath":"/jboulanger/imagej-macro/security/dependabot","repoSecurityAndAnalysisPath":"/jboulanger/imagej-macro/settings/security_analysis","repoOwnerIsOrg":false,"currentUserCanAdminRepo":false},"displayName":"Morph_ROI.ijm","displayUrl":"https://github.com/jboulanger/imagej-macro/blob/main/FRAP_Measure/Morph_ROI.ijm?raw=true","headerInfo":{"blobSize":"19.6 KB","deleteInfo":{"deleteTooltip":"Fork this repository and delete the file"},"editInfo":{"editTooltip":"Fork this repository and edit the file"},"ghDesktopPath":"https://desktop.github.com","gitLfsPath":null,"onBranch":true,"shortPath":"2214a93","siteNavLoginPath":"/login?return_to=https%3A%2F%2Fgithub.com%2Fjboulanger%2Fimagej-macro%2Fblob%2Fmain%2FFRAP_Measure%2FMorph_ROI.ijm","isCSV":false,"isRichtext":false,"toc":null,"lineInfo":{"truncatedLoc":"856","truncatedSloc":"781"},"mode":"file"},"image":false,"isCodeownersFile":null,"isPlain":false,"isValidLegacyIssueTemplate":false,"issueTemplateHelpUrl":"https://docs.github.com/articles/about-issue-and-pull-request-templates","issueTemplate":null,"discussionTemplate":null,"language":"ImageJ Macro","languageID":575143428,"large":false,"loggedIn":true,"newDiscussionPath":"/jboulanger/imagej-macro/discussions/new","newIssuePath":"/jboulanger/imagej-macro/issues/new","planSupportInfo":{"repoIsFork":null,"repoOwnedByCurrentUser":null,"requestFullPath":"/jboulanger/imagej-macro/blob/main/FRAP_Measure/Morph_ROI.ijm","showFreeOrgGatedFeatureMessage":null,"showPlanSupportBanner":null,"upgradeDataAttributes":null,"upgradePath":null},"publishBannersInfo":{"dismissActionNoticePath":"/settings/dismiss-notice/publish_action_from_dockerfile","dismissStackNoticePath":"/settings/dismiss-notice/publish_stack_from_file","releasePath":"/jboulanger/imagej-macro/releases/new?marketplace=true","showPublishActionBanner":false,"showPublishStackBanner":false},"rawBlobUrl":"https://github.com/jboulanger/imagej-macro/raw/main/FRAP_Measure/Morph_ROI.ijm","renderImageOrRaw":false,"richText":null,"renderedFileInfo":null,"shortPath":null,"tabSize":8,"topBannersInfo":{"overridingGlobalFundingFile":false,"globalPreferredFundingPath":null,"repoOwner":"jboulanger","repoName":"imagej-macro","showInvalidCitationWarning":false,"citationHelpUrl":"https://docs.github.com/en/github/creating-cloning-and-archiving-repositories/creating-a-repository-on-github/about-citation-files","showDependabotConfigurationBanner":false,"actionsOnboardingTip":null},"truncated":false,"viewable":true,"workflowRedirectUrl":null,"symbols":{"timedOut":false,"notAnalyzed":true,"symbols":[]}},"copilotInfo":{"documentationUrl":"https://docs.github.com/copilot/overview-of-github-copilot/about-github-copilot-for-individuals","notices":{"codeViewPopover":{"dismissed":false,"dismissPath":"/settings/dismiss-notice/code_view_copilot_popover"}},"userAccess":{"accessAllowed":false,"hasSubscriptionEnded":false,"orgHasCFBAccess":false,"userHasCFIAccess":false,"userHasOrgs":false,"userIsOrgAdmin":false,"userIsOrgMember":false,"business":null,"featureRequestInfo":null}},"copilotAccessAllowed":false,"csrf_tokens":{"/jboulanger/imagej-macro/branches":{"post":"_CAVsZftUCWe2uiePcoTDfZG504QEZf4zl3W-69KyNzX_Btqo0I6U9IU6GI-TwJPgeoahsBgtho3UkiOj-B97w"},"/repos/preferences":{"post":"xPal1tmlgkepBc5zT0DuiEys5N3ORf9QIl1MpMwwJBow3JTrRcRvIdfrgksM13wrgvTCIFLdf9zfxYc1Pp_6zw"}}},"title":"imagej-macro/FRAP_Measure/Morph_ROI.ijm at main · jboulanger/imagej-macro"}